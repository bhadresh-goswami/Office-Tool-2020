@model DashReportingTool.Models.TaskTitleMaster

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_defaultLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("", "", FormMethod.Post, htmlAttributes: new { @id = "form1" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TaskTitleMaster</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TaskTitleId)

        <div class="form-group">
            @Html.LabelFor(model => model.TaskTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default float-right" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script>
    // Wait for the DOM to be ready
    $(function () {
        // Initialize form validation on the registration form.
        // It has the name attribute "registration"
        $("#form1").validate({
            // Specify validation rules
            rules: {
                // The key name on the left side is the name attribute
                // of an input field. Validation rules are defined
                // on the right side
                TaskTitle: {
                    required: true,
                    minlength: 3
                }
            },
            // Specify validation error messages
            messages: {
                TaskTitle: {
                    required: "Please provide a Task Title!",
                    minlength: "It should be at least 3 characters long!"
                }
            },
            // Make sure the form is submitted to the destination defined
            // in the "action" attribute of the form when valid
            submitHandler: function (form) {
                form.submit();
            }
        });
    });
</script>